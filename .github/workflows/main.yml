name: SKY UX Main

on:
  workflow_call:
    inputs:
      code-coverage-browser-set:
        description: 'The named set of browsers to run against. Possible values: "speedy", "quirky", or "paranoid".'
        required: false
        default: 'paranoid'
        type: string
      code-coverage-threshold-branches:
        description: 'Specifies the minimum required code coverage threshold for branches (e.g. "80").'
        required: false
        default: '100'
        type: string
      code-coverage-threshold-functions:
        description: 'Specifies the minimum required code coverage threshold for functions (e.g. "80").'
        required: false
        default: '100'
        type: string
      code-coverage-threshold-lines:
        description: 'Specifies the minimum required code coverage threshold for lines (e.g. "80").'
        required: false
        default: '100'
        type: string
      code-coverage-threshold-statements:
        description: 'Specifies the minimum required code coverage threshold for statements (e.g. "80").'
        required: false
        default: '100'
        type: string
      npm-dry-run:
        description: 'Passes the `--dry-run` flag to `npm publish` for testing purposes.'
        default: false
        required: false
        type: boolean
      project:
        description: 'The name of the project in angular.json.'
        required: true
        type: string
      validate-dependencies:
        description: "Validates the library's dependencies against what is provided in the workspace package.json."
        default: true
        required: false
        type: boolean
      visual-baselines-branch:
        description: 'The git branch to commit new baseline screenshots after a successful visual test.'
        required: false
        type: string
      working-directory:
        description: 'Run the action in a different subdirectory.'
        default: './'
        required: false
        type: string
      hook-after-build-public-library-success:
        description: 'The path to a Node.js script to run after the SKY UX library is successfully built.'
        required: false
        type: string
      hook-after-code-coverage-success:
        description: 'The path to a Node.js script to run after code coverage passes.'
        required: false
        type: string
      hook-before-script:
        description: 'The path to a Node.js script to run before the primary script is executed.'
        required: false
        type: string
    secrets:
      GH_PERSONAL_ACCESS_TOKEN:
        required: false
      NPM_TOKEN:
        required: false
      SLACK_WEBHOOK:
        required: false
jobs:
  main:
    runs-on: ubuntu-latest
    name: Coverage
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Cache node modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Install pipeline settings
        run: npm install --no-save --omit=dev blackbaud/skyux-sdk-pipeline-settings#browsers
      - run: npx playwright install --with-deps chromium
        if: ${{ inputs.code-coverage-browser-set === 'speedy' }}
      - run: npx playwright install --with-deps chromium msedge
        if: ${{ inputs.code-coverage-browser-set === 'quirky' }}
      - run: npx playwright install --with-deps chromium msedge firefox webkit
        if: ${{ inputs.code-coverage-browser-set === 'paranoid' }}
      - name: Run code coverage
        run: npx ng test --project=${{ inputs.project }} --code-coverage --watch=false --progress=false --source-map --karma-config=--karma-config=./node_modules/@skyux-sdk/pipeline-settings/platforms/gh-actions/karma/karma.angular-cli.conf.js
        env:
          SKY_UX_CODE_COVERAGE_THRESHOLD_BRANCHES: ${{ inputs.code-coverage-threshold-branches }}
          SKY_UX_CODE_COVERAGE_THRESHOLD_FUNCTIONS: ${{ inputs.code-coverage-threshold-functions }}
          SKY_UX_CODE_COVERAGE_THRESHOLD_LINES: ${{ inputs.code-coverage-threshold-lines }}
          SKY_UX_CODE_COVERAGE_THRESHOLD_STATEMENTS: ${{ inputs.code-coverage-threshold-statements }}
      - run: npx ng build --project=${{ inputs.project }} --configuration=production
      - run: npx ng lint --project=${{ inputs.project }}
      - name: Upload coverage report
        run: bash <(curl -s https://codecov.io/bash)
