name: 'build-test'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - master
      - 'releases/*'

jobs:
  coverage: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: |
          npm ci
          npm run build
          npm test
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "Error: Build output is not clean. Please run the build script and commit the changes.";
            git status
            exit 1
          fi
          bash <(curl -s https://codecov.io/bash)
  e2e-angular-cli: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version-file: '.nvmrc'
      - name: Create workspace
        run: npx -p @angular/cli@20 ng new e2e-angular-cli-project --defaults --no-create-application --skip-git --no-zoneless
      - name: Create library
        run: |
          set -x
          npx ng generate library my-lib
          npm i -D @angular-devkit/build-angular@20 zone.js@~0.15.1
          npx ng config projects.my-lib.architect.test.builder @angular-devkit/build-angular:karma
          npx ng config projects.my-lib.architect.test.options.polyfills '["zone.js", "zone.js/testing"]'
        working-directory: 'e2e-angular-cli-project'
      - name: Run action
        uses: ./
        with:
          code-coverage-browser-set: 'speedy'
          code-coverage-threshold-branches: 100
          code-coverage-threshold-functions: 100
          code-coverage-threshold-lines: 100
          code-coverage-threshold-statements: 100
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          npm-dry-run: true
          project: my-lib
          slack-webhook: ${{ secrets.SLACK_WEBHOOK }}
          validate-dependencies: false
          working-directory: ./e2e-angular-cli-project
